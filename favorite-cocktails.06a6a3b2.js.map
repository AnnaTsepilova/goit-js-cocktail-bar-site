{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-61db17073de013e1.js","src/favorites.js","src/js/favoritesApi.js","node_modules/@parcel/runtime-js/lib/runtime-ce62654395a15d2e.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"bN78u\\\":\\\"favorite-cocktails.06a6a3b2.js\\\",\\\"ee16w\\\":\\\"sprite.e06f4cf7.svg\\\",\\\"4lh52\\\":\\\"index.87289d74.js\\\"}\"));","import { refs } from './js/refs';\nimport { CocktailsApi } from './js/cocktailsApi';\nimport { ApiFavorite } from './js/favoritesApi';\nimport * as themeSwitch from './js/themeSwitch';\nimport { CocktailsRender } from './js/cocktailsRender';\nimport * as mobileMenu from './js/mobileMenu';\n\nconst cocktailsApi = new CocktailsApi();\nconst favorite = new ApiFavorite();\n\n// ------------ПРИМЕР---------------------\ncocktailsApi.getCocktailsBySymbol('b').then(function (response) {\n    let i = 0;\n    for (cocktail of response.drinks) {\n        //console.log(cocktail);\n        favorite.addCocktail(cocktail);\n        i++;\n        if (i >= 4) break;\n    }\n});\n// ------------ПРИМЕР для теста ремува из favorites---------------\nfavorite.removeCocktailById(11000);\n// --------------------------------------\nconst cocktails = favorite.getAllCocktails();\nrefs.cocktailsList.innerHTML = favorite.renderAllCocktails(cocktails);\nconst removeBtn = document.querySelectorAll('.btn-add_and_remove');\n// console.log(removeBtn);\n\nfor (let btn of removeBtn) {\n  btn.addEventListener('click', onRemoveBtn);\n}\n\nfunction onRemoveBtn(e) {\n  e.preventDefault();\n  favorite.removeCocktailById(e.target.dataset.cocktailId);\n  const removeCocktailCard = document.querySelector('#c_' + e.target.dataset.cocktailId);\n  removeCocktailCard.remove();\n}\n","import { refs } from './refs';\nimport { CocktailsApi } from './cocktailsApi';\nimport sprite from '../images/sprite.svg';\n\nconst cocktailApi = new CocktailsApi();\n\nconst getId = document.querySelector('.btn-add_and_remove');\n\nexport class ApiFavorite {\n  static favoriteCocktailsKey = 'favorite-cocktails';\n  static favoriteIngridientsKey = 'favorite-ingridient';\n\n  constructor() {}\n\n  addCocktailById(cocktailID) {\n    cocktailApi.getCocktailById(cocktailID).then(function (resposne) {\n      this.addCocktail(resposne);\n    });\n  }\n\n  addCocktail(cocktailObject) {\n    // Check for cocktail ID\n    if (!cocktailObject.idDrink) {\n      return;\n    }\n\n    let cocktails = this.getAllCocktails();\n    //console.log(cocktails);\n    if (!cocktails) {\n      cocktails = [];\n    }\n\n    // Check for added cocktail\n    let result = cocktails.filter(cocktail => cocktail.idDrink === cocktailObject.idDrink);\n    if (result.length) {\n      return;\n    }\n\n    cocktails.push(cocktailObject);\n\n    localStorage.setItem(ApiFavorite.favoriteCocktailsKey, JSON.stringify(cocktails));\n  }\n\n  removeCocktailById(cocktailID) {\n    if (!cocktailID) {\n      return;\n    }\n    let cocktails = this.getAllCocktails();\n    if (!cocktails) {\n      return;\n    }\n\n    for (let key in cocktails) {\n      if (cocktails[key].idDrink == cocktailID) {\n        cocktails.splice(key, 1);\n      }\n    }\n\n    localStorage.setItem(ApiFavorite.favoriteCocktailsKey, JSON.stringify(cocktails));\n  }\n\n  getAllCocktails() {\n    return JSON.parse(localStorage.getItem(ApiFavorite.favoriteCocktailsKey)) ?? [];\n  }\n\n  async addIngredientByName(name) {\n    const ingridients = this.getAllIngredients();\n    if (ingridients && ingridients.find(ingridient => ingridient.strIngredient === name)) {\n      return;\n    }\n    const ingridientsByName = await cocktailApi.getIngredientByName(name);\n\n    const newIngridient =\n      ingridientsByName &&\n      ingridientsByName.ingredients.find(ingridient => ingridient.strIngredient === name);\n    // если не нашло то может вывести alert?\n    if (!newIngridient) {\n      return;\n    }\n\n    ingridients.push(newIngridient);\n    this.saveIngridients(ingridients);\n  }\n\n  /*removeCocktailById(removeId) {\n    const index = this.arrCockt.indexOf(removeId);\n    this.arrCockt.splice(index, 1);\n  }*/\n\n  removeIngredientByName(name) {\n    const ingredients = this.getAllIngredients();\n    const filteredIngridients = ingredients.filter(ingridient => ingridient.strIngredient !== name);\n    this.saveIngridients(filteredIngridients);\n  }\n\n  /*async getAllCocktails() {\n    const memoryId = JSON.parse(locStorage.getByKey(id));\n    const arrId = memoryId.filter(el => el.idDrink);\n    coctailApi.getCocktailById(arrId);\n  }*/\n\n  renderAllCocktails(cocktails) {\n    if (!cocktails) {\n      return;\n    }\n    return cocktails\n      .map(\n        cocktail =>\n          `\n        <li class=\"list-favorite__item\" id=\"c_${cocktail.idDrink}\">\n          <img class=\"list-favorite_img\" src=\"${cocktail.strDrinkThumb}\" alt=\"${cocktail.strDrink}\" />\n          <h3 class=\"list-favorite_coctail\">${cocktail.strDrink}</h3>\n          <div class=\"list-favorite_btn\">\n            <button class=\"btn-learn_more\">Learn more</button>\n            <button class=\"btn-add_and_remove\" data-cocktail-id=\"${cocktail.idDrink}\">\n              Remove\n              <svg class=\"icon-heart__svg\" width=\"22\" height=\"19\">\n                <use href=\"${sprite}#icon-heart\"/>\n              </svg>\n            </button>\n          </div>\n        </li>`\n      )\n      .join('');\n  }\n\n  /**\n   * @typedef {object} Ingredient\n   * @property {string} Ingredient.idIngredient\n   * @property {string} Ingredient.strIngredient\n   * @property {string} Ingredient.strDescription\n   * @property {string} Ingredient.strType\n   * @property {string} Ingredient.strAlcohol\n   * @property {string} Ingredient.strABV\n   * @return {[Ingredient]}\n   */\n\n  getAllIngredients() {\n    return JSON.parse(localStorage.getItem(ApiFavorite.favoriteIngridientsKey)) ?? [];\n  }\n\n  saveIngridients(ingridients) {\n    localStorage.setItem(ApiFavorite.favoriteIngridientsKey, JSON.stringify(ingridients));\n  }\n\n  renderAllIngredient(ingridients) {\n    // const ingridients = this.getAllIngredients();\n    return ingridients\n      .map(ingridient => {\n        `\n        <li class=\"list-ingredients__item\">\n          <h3 class=\"list-ingredients__name\">${ingridient.strIngredient}</h3>\n          <p class=\"list-ingredients__descr\">${ingridient.strDescription}</p>\n          <div class=\"box-btn\">\n            <button class=\"btn-learn_more\">Learn more</button>\n            <button class=\"btn-add_and_remove\">\n              Remove<svg class=\"icon-heart__svg\" width=\"22\" height=\"19\">\n                <use href=\"${sprite}#icon-heart\"></use>\n              </svg>\n            </button>\n          </div>\n        </li>`;\n      })\n      .join('');\n  }\n\n  searchByCocktailName(event) {\n    event.preventDefault();\n    const searchText = event.target.query.value;\n    const cocktails = this.getAllCocktails();\n    refs.cocktailsList.innerHTML = '';\n    const newCocktails = cocktails.reduce((acc, cocktail) => {\n      const cocByName = cocktail.strDrink.toLowerCase();\n      return cocByName.includes(searchText.toLowerCase()) ? [...acc, cocktail] : [...acc];\n    }, []);\n    refs.cocktailsList.insertAdjacentHTML('beforeend', this.renderAllCocktails(newCocktails));\n  }\n\n  searchByIngredientsName(event) {\n    event.preventDefault();\n    const searchText = event.target.query.value;\n    const ingridients = this.getAllIngredients();\n    refs.ingridientsList.innerHTML = '';\n    const newIngridients = ingridients.reduce((acc, ingridient) => {\n      const ingrByName = ingridient.strIngredient.toLowerCase();\n      return ingrByName.includes(searchText.toLowerCase()) ? [...acc, ingridient] : [...acc];\n    }, []);\n    refs.ingridientsList.insertAdjacentHTML('beforeend', this.renderAllIngredient(newIngridients));\n  }\n\n  isCoctailInFavorites(cocktailId) {\n    const cocktails = this.getAllCocktails();\n    return !!cocktails.find(cocktail => cocktail.idDrink === cocktailId);\n  }\n}\n\nconst favorite = new ApiFavorite();\n\nrefs.searchFavorite.addEventListener('submit', function (event) {\n  favorite.searchByCocktailName(event);\n});\n","module.exports = require('./helpers/bundle-url').getBundleURL('bN78u') + require('./helpers/bundle-manifest').resolve(\"ee16w\");"],"names":["parcelRequire","register","JSON","parse","$4Nugj","$bBd4F","$1204e234df9072a5$exports","getBundleURL","resolve","$fea69271e53173ac$var$cocktailApi","$gJIrg","CocktailsApi","document","querySelector","$fea69271e53173ac$export$bf7c95f04cc7efb1","addCocktailById","cocktailID","getCocktailById","then","resposne","this","addCocktail","cocktailObject","idDrink","cocktails","getAllCocktails","filter","cocktail","length","push","localStorage","setItem","favoriteCocktailsKey","stringify","removeCocktailById","key","splice","getItem","async","name","ingridients","getAllIngredients","find","ingridient","strIngredient","ingridientsByName","getIngredientByName","newIngridient","ingredients","saveIngridients","removeIngredientByName","filteredIngridients","renderAllCocktails","map","strDrinkThumb","strDrink","$parcel$interopDefault","join","favoriteIngridientsKey","renderAllIngredient","strDescription","searchByCocktailName","event","preventDefault","searchText","target","query","value","refs","cocktailsList","innerHTML","newCocktails","reduce","acc","toLowerCase","includes","insertAdjacentHTML","searchByIngredientsName","ingridientsList","newIngridients","isCoctailInFavorites","cocktailId","constructor","default","$fea69271e53173ac$var$favorite","searchFavorite","addEventListener","$f872ae3cf3d9dd7f$var$cocktailsApi","$f872ae3cf3d9dd7f$var$favorite","getCocktailsBySymbol","response","i","drinks","$f872ae3cf3d9dd7f$var$cocktails","$f872ae3cf3d9dd7f$var$removeBtn","querySelectorAll","btn","$f872ae3cf3d9dd7f$var$onRemoveBtn","e","dataset","remove"],"version":3,"file":"favorite-cocktails.06a6a3b2.js.map"}